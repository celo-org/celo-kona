name: Rust CI
on:
  push:
    branches: [ main ]
  pull_request:
env:
  CARGO_TERM_COLOR: always
  CARGO_TARGET_DIR: /home/runner/cargo-target
jobs:
  cargo-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    name: test
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: ./.github/actions/setup
        with:
          components: rustfmt
      - name: Install clang
        run: sudo apt install clang libclang-dev
      - uses: taiki-e/install-action@nextest
      - name: cargo test
        run: just test
  cargo-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      matrix:
        target: [ "native" ]
    name: lint-${{ matrix.target }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: ./.github/actions/setup
        with:
          channel: nightly
          components: rustfmt
          prefix-key: ${{ matrix.target }}
      - uses: ./.github/actions/setup
        with:
          channel: stable
          components: clippy
          prefix-key: ${{ matrix.target }}
      - name: Install clang
        run: sudo apt install clang libclang-dev
      - name: fmt + lint
        run: just lint-${{ matrix.target }}
  cargo-build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      matrix:
        target: [ "native" ]
    name: build-${{ matrix.target }}
    continue-on-error: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: ./.github/actions/setup
        with:
          channel: nightly
          prefix-key: ${{ matrix.target }}
      - name: Install clang
        run: sudo apt install clang libclang-dev
      - name: build
        run: just build-${{ matrix.target }}
# TODO: enable this when dependencies are clean
#  cargo-udeps:
#    runs-on: ubuntu-latest
#    timeout-minutes: 40
#    name: check-udeps
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#      - uses: Swatinem/rust-cache@v2
#        with:
#          cache-on-failure: true
#      - uses: ./.github/actions/setup
#        with:
#          channel: nightly
#      - uses: taiki-e/install-action@nextest
#      - uses: taiki-e/install-action@cargo-udeps
#      - name: cargo udeps
#        run: just check-udeps
  cargo-doc-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: ./.github/actions/setup
      - name: Install clang
        run: sudo apt install clang libclang-dev
      - name: doclint
        run: just lint-docs
  cargo-hack:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: ./.github/actions/setup
      - name: Install clang
        run: sudo apt install clang libclang-dev
      - uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: just hack
