name: Rust CI

on:
  push:
    branches: [ main ]
  merge_group:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    name: test
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          components: rustfmt
      - uses: taiki-e/install-action@nextest
      - name: cargo test
        run: just test

  cargo-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      matrix:
        target: [ "native" ]
    name: lint-${{ matrix.target }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          channel: stable
          components: clippy
          prefix-key: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: fmt + lint
        run: just lint-${{ matrix.target }}
      - name: chown target
        run: |
          sudo chown -R $(id -u):$(id -g) ./target

  cargo-build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      matrix:
        target: [ "native" ]
    name: build-${{ matrix.target }}
    continue-on-error: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          channel: nightly
          prefix-key: ${{ matrix.target }}
      - name: build
        run: just build-${{ matrix.target }}
      - name: chown target
        run: |
          sudo chown -R $(id -u):$(id -g) ./target
  cargo-udeps:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    name: check-udeps
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          channel: nightly
      - uses: taiki-e/install-action@nextest
      - uses: taiki-e/install-action@cargo-udeps
      - name: cargo udeps
        run: just check-udeps
  cargo-hack:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Install clang
        run: sudo apt install clang libclang-dev
      - uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: just hack

  check-no-std:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Install mold linker
        uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: riscv32imac-unknown-none-elf
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: check
        run: ./.github/scripts/check_no_std.sh

  deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          rust-version: 1.88
